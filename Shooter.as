package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.geom.Point;	public class Shooter extends Enemy	{		public function Shooter(main:Main, x:Number, y:Number)		{			super(main, x, y);			this.damage = 10;		}				override public function update()		{			if(!visible) return;									patrol();			gravity();						x = Math.round(x);									this.stageX = this.parent.localToGlobal(new Point(this.x, 0)).x;			this.stageY = this.parent.localToGlobal(new Point(0, this.y)).y;						if(main.player.x > (stageX - 200) && main.player.x < (stageX + 200))			{				this.alpha = 0.9;				moveArm();				shoot();				timeSinceLastShot++;			} else {				this.alpha = 1;			}		}				public function shoot()		{						if(timeSinceLastShot >= 30)			{				var bullet:EnemyBullet = main.createEnemyBullet(stageX, stageY - (height / 2), this.damage);												var targetX = (stageX - main.player.x);				var targetY = (bullet.y - (main.player.y - main.player.height / 2)) * -1;								var degrees = Math.atan(targetY / targetX)/(Math.PI/180);								if (targetX < 0) {					degrees += 180;				}				if (targetX >= 0 && targetY < 0) {					degrees += 360;				}				degrees = (degrees*-1) + 90;								var radians:Number = -degrees* Math.PI / 180;								bullet.rotation = degrees;				bullet.speedX = Math.sin(radians) * 15;				bullet.speedY = Math.cos(radians) * 15;								timeSinceLastShot = 0;								main.laser.play();			}		}				public function moveArm()		{			var targetX = (stageX - main.player.x);			var targetY = (stageY - main.player.y) * -1;						var degrees = Math.atan(targetY / targetX)/(Math.PI/180);						if (targetX < 0) {				degrees += 180;			}			if (targetX >= 0 && targetY < 0) {				degrees += 360;			}			degrees = (degrees*-1);						if(scaleX < 1) degrees += 180;						var radians:Number = -degrees* Math.PI / 180;						this.arm.rotation = degrees;		}	}}