package  {	import flash.geom.Point;	import flash.media.Sound;		public class Walker extends Enemy	{		public var nomCount = 0;		public function Walker(main:Main, x:Number, y:Number) 		{			super(main, x, y);			this.speed = 2;			this.damage = 2;			this.health = 100;		}				override public function update()		{			if(!visible) return;			this.stageX = this.parent.localToGlobal(new Point(this.x, 0)).x;			this.stageY = this.parent.localToGlobal(new Point(0, this.y)).y;			gravity();									if(main.player.x > (stageX - 400) && main.player.x < (stageX + 400))			{				this.alpha = 0.9;				follow();				if(!main.zombiesPlaying)				{					main.zombiesPlaying = true;					main.zombiesChannel = main.zombies.play(main.zombiesLastPos, int.MAX_VALUE);				}			} else {				this.alpha = 1;				main.zombiesPlaying = false;				main.zombiesLastPos = main.zombiesChannel.position;				main.zombiesChannel.stop();			}						if(main.player.x > (stageX - (width / 2)) && main.player.x < (stageX + (width / 2)) && (main.player.y - (main.player.height / 2)) > stageY - height)			{				this.nomCount++;								if(nomCount % 10 == 0)				{					main.player.hit(this.damage);				}			}						x = Math.round(x);		}				override public function hit()		{			health -= 25;						if(health <= 0)			{				this.visible = false;				main.player.killed++;				main.zombiesPlaying = false;				main.zombiesLastPos = main.zombiesChannel.position;				main.zombiesChannel.stop();			}		}				public function follow()		{			if(main.player.x < stageX)			{				x -=speed;				scaleX = -1;			} else {				x +=speed;				scaleX = 1;			}		}	}	}