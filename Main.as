package{	import flash.display.Stage;	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.ui.Mouse;	import flashx.textLayout.formats.BackgroundColor;	import flash.media.Sound;	import flash.net.URLRequest;	import flash.media.SoundChannel;		public class Main extends MovieClip 	{				public var gravity:Number = 10;						public var sandwichCount = 0;				public var crosshair;		public var splash:Splash;		public var gameover:GameOver;		public var completed:Completed;				public var bg:Background;		public var level:Level;		public var player:Player;						public var bullets:Array = [];		public var enemyBullets:Array = [];		public var hud:HUD;				public var state = "start";				// Sounds				public var shot:Shot;		public var laser:Laser;		public var nom:Array;		public var zombies:Sound = new Sound();		public var zombiesChannel:SoundChannel = new SoundChannel();				public var zombiesPlaying = false;		public var zombiesLastPos:Number = 0;				public function Main() 		{			// constructor code			init();															addEventListener(Event.ENTER_FRAME, loop);		}						private function loop(event:Event)		{			if(this.state=="play") 				{				Mouse.hide();				crosshair.visible = true;				crosshair.startDrag(true);			} else {				Mouse.show();				crosshair.visible = false;				crosshair.startDrag(false);			}			switch(this.state)			{				case "start":					break;				case "play":					player.update();										hud.setHealth(player.health);					hud.setSandwich(sandwichCount);										for each (var bullet:Bullet in bullets)					{						bullet.update();					}										for each (var enemyBullet:EnemyBullet in enemyBullets)					{						enemyBullet.update();					}										for each (var enemy:Enemy in level.enemies)					{						enemy.update();					}				break;			}			sortDepths();		}				public function init():void		{			// Splash			splash = new Splash(this);			addChild(splash);						// Player			player = new Player(this);			addChild(player);						// Level			level = new Level(this);			addChild(level);						// Background			bg = new Background();			addChild(bg);						// HUD			hud = new HUD();			addChild(hud);			hud.setHealth(player.health);						// Gameover			gameover = new GameOver(this);			addChild(gameover);			// Completed			completed = new Completed(this);			addChild(completed);			crosshair = new Crosshair();			addChild(crosshair);						crosshair.visible = false;			splash.visible = true;			player.visible = false;			level.visible = false;			hud.visible = false;			bg.visible = false;			gameover.visible = false;			completed.visible = false;									// Sounds						nom = [new NomHi(), new Nom(), new NomLo()];			zombies.load(new URLRequest("assets/zombies.mp3"));			shot = new Shot();			laser = new Laser();		}				public function startGame():void 		{			this.state = "play";						splash.visible = false;			player.visible = true;			level.visible = true;			hud.visible = true;			bg.visible = true;			gameover.visible = false;			}				public function gameOver():void		{			this.state = "gameover";			splash.visible = false;			player.visible = false;			level.visible = false;			hud.visible = false;			bg.visible = false;						gameover.sandwichField.text = String(sandwichCount);						gameover.visible = true;		}						public function finished():void		{			this.state = "gameover";			splash.visible = false;			player.visible = false;			level.visible = false;			hud.visible = false;			bg.visible = false;			gameover.visible = false;						completed.sandwichField.text = String(sandwichCount);			completed.visible = true;		}				public function sortDepths():void		{			switch(state)			{				case "play":					setChildIndex(player, numChildren - 1);					setChildIndex(hud, numChildren - 2);					setChildIndex(bg, 0);				break;			}		}				public function createBullet()		{			var bullet:Bullet = new Bullet(this);			addChild(bullet);			bullets.push(bullet);			return bullet;		}		public function createEnemyBullet(x, y, damage:Number)		{			var bullet:EnemyBullet = new EnemyBullet(this, damage);			bullet.x = x;			bullet.y = y;			addChild(bullet);			enemyBullets.push(bullet);			return bullet;		}				public function nextLevel()		{			player.x = 50;			player.y = 300;			level.nextLevel();		}	}	}