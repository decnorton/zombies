package  {	import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import com.iainlobb.gamepad.Gamepad;	import flash.display.Stage;	public class Player extends MovieClip 	{		public var main:Main;		private var gamepad:Gamepad;				private var jumping:Boolean = false;		private var jumpSpeed:Number;		private var jumpSpeedLimit:Number = 40;				public var health:Number = 100;		public var killed:Number;				public var shot:Boolean = false;		public function Player(main) 		{			// Reference main			this.main = main;						// Set position						x = 50;			y = 300;						addEventListener(Event.ADDED_TO_STAGE, addedToStage);		}				private function addedToStage(event:Event)		{			gamepad = new Gamepad(stage, true);			stage.addEventListener(MouseEvent.CLICK, onClick);		}				public function onClick(event:MouseEvent)		{			if(main.state != "play") return;						if(!shot)			{				shot = true;				return;			}						var bullet:Bullet = main.createBullet();									bullet.x = x;			bullet.y = y - (height / 2);			//bullet.rotation = rotation;						var targetX = (x - stage.mouseX);			var targetY = (bullet.y - stage.mouseY) * -1;						var degrees = Math.atan(targetY / targetX)/(Math.PI/180);						if (targetX < 0) {				degrees += 180;			}			if (targetX >= 0 && targetY < 0) {				degrees += 360;			}			degrees = (degrees*-1) + 90;						var radians:Number = -degrees* Math.PI / 180;						bullet.rotation = degrees;						bullet.x = x + Math.sin(radians) * 10;			bullet.y = (y - (height / 2)) + Math.cos(radians) * 15;			bullet.speedX = Math.sin(radians) * 15;			bullet.speedY = Math.cos(radians) * 15;						main.shot.play();		}				public function hit(damage:Number)		{			this.health -= damage;		}				public function update()		{			if(main.state == "play")			{				if(health <= 0)				{					main.gameOver();				}								// Move arm				moveArm();												// Horizontal movement				x += Math.round(gamepad.x * 10);								// Is player on the ground?				if(main.level.collide.hitTestPoint(x, y, true))				{					// Jump					if(gamepad.fire2.isPressed)					{						jumping = true;						jumpSpeed = jumpSpeedLimit * -1;						//y += jumpSpeed;					} else {						jumping = false;					}				} else {					y += main.gravity;				}												// Jump				if(jumping)				{					if(jumpSpeed < 0)					{						jumpSpeed *= 0.8;					}					y += jumpSpeed;				}								// Get out of the floor				while(main.level.collide.hitTestPoint(x, y - 1, true))				{					y -= 1;				}												// Move background				if(this.x <= 0 + width)				{					x = width;					main.level.move(gamepad.x);				}				if(x >= stage.stageWidth - 200)				{					x = stage.stageWidth - 200;					main.level.move(gamepad.x);				}								// Is player about to hit a wall?								while(main.level.collide.hitTestPoint(x + (width / 2), y - height, true))				{					x -= 1;				}								while(main.level.collide.hitTestPoint(x - (width / 2), y - height, true))				{					x += 1;				}								// Check for items								for each (var item in main.level.items)				{					if(item.hitTestPoint(x, y - (height / 2), true) && !item.pickedUp)					{						// Hit one						this.health += item.healthValue;						item.hit();					}				}								if(y >= stage.stageHeight)				{					hit(health);				}								// No silly decimals				y = Math.round(y);				x = Math.round(x);			}		}				public function moveArm()		{			var targetX = (x - stage.mouseX);			var targetY = (y - stage.mouseY) * -1;						var degrees = Math.atan(targetY / targetX)/(Math.PI/180);						if (targetX < 0) {				degrees += 180;			}			if (targetX >= 0 && targetY < 0) {				degrees += 360;			}			degrees = (degrees*-1) + 180;						var radians:Number = -degrees* Math.PI / 180;						this.arm.rotation = degrees;		}			}	}